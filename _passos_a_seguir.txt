# abrir cmd com privilégios admin

minikube start --vm-driver=hyperv
# arranca máquina virtual do minikube com controlador hyper-v

minikube status
# mostra o estado da máquina virtual

kubectl get all
# mostra o estado dos pods e serviços (default) no minikube

# é necessário executar os seguintes passos na pasta

kubectl apply -f rabbitmq.yaml
# instala e aplica o pod do rabbitMQ e seus serviços
# rabbitMQ fica disponível no endereço http://172.17.150.118:30072/#/
# dados de acesso: guest / guest

kubectl apply -f mysql.yaml
# instala e aplica o pod do mysql e serviço deacesso na porta 3306
# - name: MYSQL_ROOT_PASSWORD
#   value: password
# - name: MYSQL_DATABASE
#   value: database_password

kubectl apply -f producer.yaml

minikube ip
http://192.168.46.115:30073/javainuse-rabbitmq/producer?empName=emp2&empId=emp002

kubectl apply -f consumer_producer.yaml

### Springboot ###
# depois de editar
mvnw clean package


### DOCKER ###
# "cd" na pasta onde está o docker file
# criar container com aplicação JAVA
docker images
docker build -t starter-amqp .
docker tag 2d43688323ca dafonso/starter-amqp:2
docker push dafonso/starter-amqp:2


# criar container com aplicação ANGULAR
#https://www.codementor.io/@yomateo/angular-docker-dockerize-your-app-in-5-minutes-video-included-oohw2mzuj
# "cd" na pasta onde está o docker file
docker images
docker build -t frontend:0 .
docker tag 2d43688323ca dafonso/starter-amqp:2
docker push dafonso/starter-amqp:2

#extras
minikube dashboard (abre página no browser com dasboard das atividades correndo no minikube)
kubectl exec webapppodenamegoeshere ls  (lista conteúdo na raiz do ambiente deployed)
kubectl -it exec webapps sh  (abre um terminal bash do ambiente deployed)
kubectl cluster-info (check the information of our cluster)
